{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1",
        "title": "imedusaAPI"
    },
    "host": "imedusa-test.apigee.net",
    "basePath": "/v1/imedusaapi",
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/orgs": {
            "get": {
                "tags": [
                    "org"
                ],
                "summary": "Get All Orgs resgistered in System",
                "description": "Returns All Orgs registered in System",
                "operationId": "orgs",
                "responses": {
                    "200": {
                        "description": "Get All Organizations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Org"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "org"
                ],
                "summary": "Add a new Org to the System",
                "description": "",
                "operationId": "addOrg",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Org object that needs to be added to the system",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Org"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Org"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{orgId}": {
            "get": {
                "tags": [
                    "org"
                ],
                "summary": "Returns Org by Id",
                "description": "Returns Org by Id",
                "operationId": "orgbyId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "orgId",
                        "description": "ID of Org that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Org"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "org"
                ],
                "summary": "Update an Orgn",
                "description": "Update an Org",
                "operationId": "actionOrg",
                "parameters": [
                    {
                        "in": "path",
                        "name": "orgId",
                        "description": "ID of Org that is updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "action",
                        "description": "Action can be register,deregsiter,clean,backup",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The property change that needs to take place",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Org"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "org"
                ],
                "summary": "Delete an Orgn",
                "description": "Delete an Org from imedusa system",
                "operationId": "deleteOrg",
                "parameters": [
                    {
                        "in": "path",
                        "name": "orgId",
                        "description": "ID of Org to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Org"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/findByTags": {
            "get": {
                "tags": [
                    "org"
                ],
                "summary": "Finds Orgs by tags",
                "description": "Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
                "operationId": "findOrgsByTags",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter1Name",
                        "description": "Filter1 Name could be any attribute of org",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter1Value",
                        "description": "Value of Filter1 attribute",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter2Name",
                        "description": "Filter2 Name could be any attribute of org",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter2Value",
                        "description": "Value of Filter2 attribute",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter3Name",
                        "description": "Filter3 Name could be any attribute of org",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter3Value",
                        "description": "Value of Filter3 attribute",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Org"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid tag value"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Get all categories",
                "description": "Get all dynamic categories",
                "operationId": "getAllCategories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "category"
                ],
                "summary": "Create a Category",
                "description": "dynamic categories.",
                "operationId": "createCategory",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Category object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/categories/{categoryname}": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Get a Category",
                "description": "get dynamic category.",
                "operationId": "getCategoryByName",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryname",
                        "description": "The name that needs to be fetched.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "400": {
                        "description": "Invalid categoryname supplied"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getUserByName",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "description": "The name that needs to be fetched.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "description": "name that need to be deleted",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/audits": {
            "get": {
                "tags": [
                    "audits"
                ],
                "summary": "Get All Audit Reports",
                "description": "Audit Record",
                "operationId": "getAllAudits",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Audit"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "audits"
                ],
                "summary": "Create an audit record",
                "description": "Audit Record",
                "operationId": "createAudit",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created audit object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Audit"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "events"
                ],
                "summary": "Get All Events",
                "description": "Events",
                "operationId": "getAllEvents",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "events"
                ],
                "summary": "Create a Event record",
                "description": "Event Record",
                "operationId": "createEvent",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create a Event ",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/notifications/{email}": {
            "post": {
                "tags": [
                    "notifications"
                ],
                "summary": "Create a notification",
                "description": "Notification",
                "operationId": "createNotification",
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "description": "Email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Notification",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "definitions": {
        "Org": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "account": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "finish": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isMonetized": {
                    "type": "string"
                },
                "isPrivate": {
                    "type": "string"
                },
                "cloudProvider": {
                    "type": "string"
                },
                "usages": {
                    "$ref": "#/definitions/Usages"
                }
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date"
                },
                "endDate": {
                    "type": "string",
                    "format": "date"
                },
                "account": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "edgeaccount": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                }
            }
        },
        "Audit": {
            "type": "object",
            "properties": {
                "org": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "org": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "Notification": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Usages": {
            "type": "object",
            "properties": {
                "weekly": {
                    "type": "integer"
                },
                "monthly": {
                    "type": "integer"
                },
                "quarterly": {
                    "type": "integer"
                }
            }
        }
    }
}